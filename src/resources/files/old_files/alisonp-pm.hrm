clickCheckbox("use_communal_piecemeal_exclusion_check","false");
clickCheckbox("use_surrender_check","false");
clickCheckbox("use_strategic_withdrawal_check","false");
clickList("domain_list", "muticheck.hrd", "true");
clickList("split_values_list", "integer:0", "true");
clickList("split_values_list", "integer:1", "true");
clickList("split_values_list", "integer:2", "true");
clickList("split_values_list", "integer:3", "true");
clickList("split_values_list", "integer:4", "true");
clickCheckbox("disjunct_check", "false");
clickCheckbox("embed_algebra_check", "false");
clickCheckbox("embed_graph_check", "false");
clickCheckbox("equal_check", "false");
clickCheckbox("forall_check", "false");
clickCheckbox("record_check", "false");
clickList("concept_formatting_list", "ascii def", "false");
clickList("concept_formatting_list", "prolog def", "true");
clickList("conjecture_formatting_list", "ascii format", "false");
clickList("conjecture_formatting_list", "prolog format", "true");
setText("compose_arity_limit_text", "5");
setText("exists_arity_limit_text", "5");
setText("match_arity_limit_text", "5");
setText("negate_arity_limit_text", "5");
setText("size_arity_limit_text", "5");
setText("split_arity_limit_text", "5");
clickCheckbox("subobject_overlap_check", "false");
setText("complexity_text", "12");
clickList("force_primary_concept_list", "int002", "true");
clickList("force_prodrule_list", "split", "true");
clickButton("start_button");
clickList("force_primary_concept_list", "int002", "true");
clickList("force_prodrule_list", "split", "true");
clickList("force_parameter_list", "[[1], [2]]: [a, b] : a is an integer & 2 is an integer & b is an integer & a mod 2 = b", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "i7_0", "true");
clickList("force_secondary_concept_list", "mc003", "true");
clickList("force_prodrule_list", "compose", "true");
clickList("force_parameter_list", "[s, 0, 1, 0, 2]: [a, b, c, d] : b is an integer & c is an integer & a is a square & a is at (b,c) & d is an integer & 2 is an integer & b mod 2 = d", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "s8_0", "true");
clickList("force_secondary_concept_list", "i7_0", "true");
clickList("force_prodrule_list", "compose", "true");
clickList("force_parameter_list", "[0, 0, 1, 2]: [a, b, c, d] : b is an integer & c is an integer & a is a square & a is at (b,c) & d is an integer & 2 is an integer & b mod 2 = d & 2 is an integer & c mod 2 = d", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "s9_0", "true");
clickList("force_prodrule_list", "exists", "true");
clickList("force_parameter_list", "[1, 2, 3]: [a] : a is a square & exists b c d (b is an integer & c is an integer & a is at (b,c) & d is an integer & 2 is an integer & b mod 2 = d & 2 is an integer & c mod 2 = d)", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "s10_0", "true");
clickList("force_secondary_concept_list", "mc002", "true");
clickList("force_prodrule_list", "negate", "true");
clickList("force_parameter_list", "[]: [a] : a is a square & -(exists b c d (b is an integer & c is an integer & a is at (b,c) & d is an integer & 2 is an integer & b mod 2 = d & 2 is an integer & c mod 2 = d))", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "s10_0", "true");
clickList("force_secondary_concept_list", "mc004", "true");
clickList("force_prodrule_list", "compose", "true");
clickList("force_parameter_list", "[s, 0, 1]: [a, b] : a is a mutilated checkerboard & b is a square & b is uncovered & exists c d e (c is an integer & d is an integer & b is at (c,d) & e is an integer & 2 is an integer & c mod 2 = e & 2 is an integer & d mod 2 = e)", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "s11_0", "true");
clickList("force_secondary_concept_list", "mc004", "true");
clickList("force_prodrule_list", "compose", "true");
clickButton("force_button");
clickList("force_parameter_list", "[s, 0, 1]: [a, b] : a is a mutilated checkerboard & b is a square & b is uncovered & -(exists c d e (c is an integer & d is an integer & b is at (c,d) & e is an integer & 2 is an integer & c mod 2 = e & 2 is an integer & d mod 2 = e))", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "b12_0", "true");
clickList("force_prodrule_list", "size", "true");
clickList("force_parameter_list", "[1]: [a, b] : a is a mutilated checkerboard & b is an integer & b=|{c: c is a square & c is uncovered & exists d e f (d is an integer & e is an integer & c is at (d,e) & f is an integer & 2 is an integer & d mod 2 = f & 2 is an integer & e mod 2 = f)}|", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "b13_0", "true");
clickList("force_prodrule_list", "size", "true");
clickList("force_parameter_list", "[1]: [a, b] : a is a mutilated checkerboard & b is an integer & b=|{c: c is a square & c is uncovered & -(exists d e f (d is an integer & e is an integer & c is at (d,e) & f is an integer & 2 is an integer & d mod 2 = f & 2 is an integer & e mod 2 = f))}|", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "b14_0", "true");
clickList("force_secondary_concept_list", "b15_0", "true");
clickList("force_prodrule_list", "compose", "true");
clickList("force_parameter_list", "[1, 2]: [a, b] : b is an integer & a is a mutilated checkerboard & b=|{c: c is a square & c is uncovered & exists d e f (d is an integer & e is an integer & c is at (d,e) & f is an integer & 2 is an integer & d mod 2 = f & 2 is an integer & e mod 2 = f)}| & b=|{g: g is a square & g is uncovered & -(exists h i j (h is an integer & i is an integer & g is at (h,i) & j is an integer & 2 is an integer & h mod 2 = j & 2 is an integer & i mod 2 = j))}|", "true");
clickButton("force_button");
