clickList("domain_list", "group.hrd", "true");
clickCheckbox("disjunct_check", "false");
clickCheckbox("embed_algebra_check", "false");
clickCheckbox("embed_graph_check", "false");
clickCheckbox("equal_check", "false");
clickCheckbox("record_check", "false");
clickList("split_values_list", "integer:1", "true");
clickList("split_values_list", "integer:2", "true");
clickList("conjecture_formatting_list", "ascii format", "false");
clickList("conjecture_formatting_list", "simplified format", "true");
clickCheckbox("use_communal_piecemeal_exclusion_check", "true");
clickCheckbox("use_monster_barring_check", "true");
clickButton("start_button");
clickList("force_primary_concept_list", "group004a", "true");
clickList("force_prodrule_list", "exists", "true");
clickList("force_parameter_list", "[1]: [a] : a is a group & exists b (b in a & b=id)", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "group003", "true");
clickList("force_secondary_concept_list", "group003", "true");
clickList("force_prodrule_list", "compose", "true");
clickList("force_parameter_list", "[1, 3, 2, 4]: [a, b, c, d] : a is a group & b in a & c in a & d in a & b*c=d & c*b=d", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "g6_0", "true");
clickList("force_prodrule_list", "exists", "true");
clickList("force_parameter_list", "[1, 2, 3]: [a] : a is a group & exists b c d (b in a & c in a & d in a & b*c=d & c*b=d)", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "g7_0", "true");
clickList("force_secondary_concept_list", "group001", "true");
clickList("force_prodrule_list", "forall", "true");
clickList("force_parameter_list", "[2, 3]: [a, b, c, d] : a is a group & b in a & c in a & d in a & exists d (b*c=d & c*b=d)", "true");
clickButton("force_button");
