clickList("domain_list", "grouptest_mon.hrd", "true");
clickCheckbox("disjunct_check", "false");
clickCheckbox("embed_algebra_check", "false");
clickCheckbox("embed_graph_check", "false");
clickCheckbox("equal_check", "false");
clickCheckbox("record_check", "false");
clickList("split_values_list", "integer:1", "true");
clickList("split_values_list", "integer:2", "true");
clickList("conjecture_formatting_list", "ascii format", "false");
clickList("conjecture_formatting_list", "simplified format", "true");
clickCheckbox("make_equivalences_from_equality_check", "false");
clickCheckbox("make_equivalences_from_combination_check", "false");
clickButton("start_button");
clickList("force_primary_concept_list", "group003", "true");
clickList("force_prodrule_list", "exists", "true");
clickList("force_parameter_list", "[1]: [a, b, c] : a is a group & b in a & c in a & exists d (d in a & d*b=c)", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "g6_0", "true");
clickList("force_secondary_concept_list", "group005a", "true");
clickList("force_prodrule_list", "forall", "true");
clickList("force_parameter_list", "[group001, [1, 0, 0], [1, 0, 0], s]: [a] : a is a group & ((b in a & c in a & inv(b)=c) -> (b in a & c in a & exists d (d in a & d*b=c)))", "true");
clickButton("force_button");
