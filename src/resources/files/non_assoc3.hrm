clickList("domain_list", "non_assoc3.hrd", "true");
clickCheckbox("make_equivalences_from_equality_check", "false");
clickCheckbox("make_implications_from_subsumptions_check", "true");
clickCheckbox("disjunct_check", "false");
clickCheckbox("embed_algebra_check", "false");
clickCheckbox("embed_graph_check", "false");
clickCheckbox("equal_check", "false");
clickCheckbox("record_check", "false");
setText("compose_arity_limit_text", "10");
setText("negate_arity_limit_text", "10");
setText("negate_tier_text", "10");
setText("forall_arity_limit_text", "10");
clickCheckbox("subobject_overlap_check", "false");
setText("match_arity_limit_text", "10");
clickList("split_values_list", "integer:1", "true");
clickList("split_values_list", "integer:2", "true");
clickList("conjecture_formatting_list", "ascii format", "false");
clickList("conjecture_formatting_list", "simplified format", "true");
clickCheckbox("use_communal_piecemeal_exclusion_check", "true");
clickCheckbox("use_monster_barring_check", "false");
clickCheckbox("use_lemma_incorporation_check", "true");
clickButton("start_button")
clickList("force_primary_concept_list", "group010", "true");
clickList("force_prodrule_list", "exists", "true");
clickList("force_parameter_list", "[1]: [a, b, c] : a is a group & b in a & c in a & exists d (d in a & inv(d) * (d * b) = inv(d) * (d * c) )", "true");
clickButton("force_button");
clickList("concept_list", "g11_0", "true");
clickList("concept_list", "group011", "true");
clickList("concept_list", "group010", "true");
clickList("concept_list", "group011", "true");
clickList("concept_list", "group010", "true");
clickList("concept_list", "group011", "true");
clickList("concept_list", "g11_0", "true");
clickList("concept_list", "group011", "true");
clickList("concept_list", "g11_0", "true");
clickList("force_primary_concept_list", "group002", "true");
clickList("force_secondary_concept_list", "group002", "true");
clickList("force_prodrule_list", "compose", "true");
clickList("force_parameter_list", "[1, 0, 2]: [a, b, c] : a is a group & b in a & c in a", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "g14_0", "true");
clickList("force_prodrule_list", "equal", "true");
clickList("force_parameter_list", "[1, 2]: [a, b, c] : a is a group & b in a & c in a & b=c", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "g14_0", "true");
clickList("force_secondary_concept_list", "group002", "true");
clickList("force_prodrule_list", "compose", "true");
clickList("force_parameter_list", "[1, 0, 0, 2]: [a, b, c, d] : a is a group & b in a & c in a & b=c & d in a", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "group012", "true");
clickList("force_prodrule_list", "exists", "true");
clickList("force_parameter_list", "[1]: [a, b, c] : a is a group & b in a & c in a & exists d (d=id &  d * b = d * c )", "true");
clickButton("force_button");
clickList("force_primary_concept_list", "group013", "true");
clickList("force_prodrule_list", "exists", "true");
clickList("force_parameter_list", "[1]: [a, b, c] : a is a group & b in a & c in a & exists d (d in a & (inv(d) * d) * b = (inv(d) * d) * c )", "true");
clickButton("force_button");
//force the global and local conjectures
setText("force_conjecture_text","{g16_0->group008<={group009->group010,group010->group013,g18_0->g17_0,g17_0->g15_0}}");
