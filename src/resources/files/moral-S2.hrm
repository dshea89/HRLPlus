clickList("domain_list", "moral.hrd", "true");
clickList("initial_concepts_list", "notguilty", "false");
clickButton("initial_entity_none_button");
clickList("initial_entity_list", "integer:0", "true");
clickList("initial_entity_list", "integer:1", "true");
clickList("initial_entity_list", "degree:high", "true");
clickList("initial_entity_list", "degree:low", "true");
clickList("initial_entity_list", "state:negligent", "true");
clickList("initial_entity_list", "state:reckless", "true");
clickList("initial_entity_list", "state:neither", "true");
clickList("initial_entity_list", "state:intent", "true");
clickList("initial_entity_list", "yesorno:y", "true");
clickList("initial_entity_list", "yesorno:n", "true");
clickList("initial_entity_list", "person:p0", "true");
clickList("initial_entity_list", "person:p1", "true");
clickList("initial_entity_list", "person:p2", "true");
clickList("initial_entity_list", "person:p3", "true");
clickList("initial_entity_list", "person:p4", "true");
clickList("initial_entity_list", "person:p5", "true");
clickList("initial_entity_list", "person:p6", "true");
clickList("initial_entity_list", "person:p7", "true");
clickList("initial_entity_list", "person:p8", "true");
clickList("initial_entity_list", "person:p9", "true");
clickList("initial_entity_list", "person:p10", "true");
clickList("initial_entity_list", "person:p11", "true");
clickList("initial_entity_list", "person:p12", "true");
clickList("initial_entity_list", "person:p13", "true");
clickList("initial_entity_list", "person:p14", "true");
clickList("initial_entity_list", "person:p15", "true");
clickList("initial_entity_list", "person:p16", "true");
clickList("initial_entity_list", "person:p17", "true");
clickList("initial_entity_list", "person:p18", "true");
clickList("initial_entity_list", "person:p19", "true");

clickList("initial_entity_list", "person:n0", "true");
clickList("initial_entity_list", "person:n1", "true");
clickList("initial_entity_list", "person:n2", "true");
clickList("initial_entity_list", "person:n3", "true");
clickList("initial_entity_list", "person:n4", "true");
clickList("initial_entity_list", "person:n5", "true");
clickList("initial_entity_list", "person:n6", "true");
clickList("initial_entity_list", "person:n7", "true");
clickList("initial_entity_list", "person:n8", "true");
clickList("initial_entity_list", "person:n9", "true");
clickList("initial_entity_list", "person:n10", "true");
clickList("initial_entity_list", "person:n11", "true");
clickList("initial_entity_list", "person:n12", "true");
clickList("initial_entity_list", "person:n13", "true");
clickList("initial_entity_list", "person:n14", "true");
clickList("initial_entity_list", "person:n15", "true");
clickList("initial_entity_list", "person:n16", "true");
clickList("initial_entity_list", "person:n17", "true");
clickList("initial_entity_list", "person:n18", "true");
clickList("initial_entity_list", "person:n19", "true");

clickCheckbox("equal_check", "false");
clickCheckbox("forall_check", "false");
clickCheckbox("match_check", "false");
clickCheckbox("negate_check", "false");
clickCheckbox("record_check", "false");
clickCheckbox("size_check", "false");
clickCheckbox("make_near_equivalences_check", "true");
setText("near_equivalence_percent_text", "60");
clickList("split_values_list", "all: yesornos", "true");
clickList("split_values_list", "all: states", "true");
clickList("split_values_list", "all: degrees", "true");
clickList("split_values_list", "all: integers", "true");

clickList("concept_formatting_list", "simplified def", "false");
clickList("concept_formatting_list", "otter def", "false");
clickList("concept_formatting_list", "prolog def", "false");
clickList("concept_formatting_list", "tptp def", "false");
clickList("concept_formatting_list", "total score", "false");
clickList("concept_formatting_list", "applicability", "false");
clickList("concept_formatting_list", "child num", "false");
clickList("concept_formatting_list", "child score", "false");
clickList("concept_formatting_list", "complexity", "false");
clickList("concept_formatting_list", "comprehens", "false");
clickList("concept_formatting_list", "coverage", "false");
clickList("concept_formatting_list", "devel steps", "false");
clickList("concept_formatting_list", "equiv conj score", "false");
clickList("concept_formatting_list", "equiv conj num", "false");
clickList("concept_formatting_list", "highlight", "false");
clickList("concept_formatting_list", "imp conj score", "false");
clickList("concept_formatting_list", "imp conj num", "false");
clickList("concept_formatting_list", "ne conj score", "false");
clickList("concept_formatting_list", "ne conj num", "false");
clickList("concept_formatting_list", "novelty", "false");
clickList("concept_formatting_list", "parent score", "false");
clickList("concept_formatting_list", "parsimony", "false");
clickList("concept_formatting_list", "pi conj score", "false");
clickList("concept_formatting_list", "pi conj num", "false");
clickList("concept_formatting_list", "productivity", "false");
clickList("concept_formatting_list", "variety", "false");
clickList("concept_formatting_list", "datatable", "false");
clickList("concept_formatting_list", "types", "false");
clickList("concept_formatting_list", "functions", "false");
clickList("concept_formatting_list", "const step", "false");
clickList("concept_formatting_list", "arity", "false");
clickList("concept_formatting_list", "const time", "false");
clickList("concept_formatting_list", "ancestors", "false");
clickList("concept_formatting_list", "cross domain", "false");
clickList("concept_formatting_list", "entity instant", "false");
clickList("concept_formatting_list", "add examples", "false");
clickList("concept_formatting_list", "implications", "false");
clickList("concept_formatting_list", "generalisations", "false");
clickList("concept_formatting_list", "implied specs", "false");
clickList("concept_formatting_list", "specifications", "false");
clickList("conjecture_formatting_list", "ascii format", "false");

setText("compose_arity_limit_text", "2");
setText("exists_arity_limit_text", "1");
setText("split_arity_limit_text", "1");
clickCheckbox("disjunct_check", "false");
clickCheckbox("embed_algebra_check", "false");
clickCheckbox("embed_graph_check", "false");
clickCheckbox("teacher_requests_conjecture_check", "true");
clickCheckbox("use_surrender_check", "false");
clickCheckbox("use_strategic_withdrawal_check", "true");
clickCheckbox("use_piecemeal_exclusion_check", "false");
clickCheckbox("use_communal_piecemeal_exclusion_check", "false");
clickCheckbox("make_implications_from_subsumptions_check", "true");
setText("conjecture_surprisingness_weight_text", "0.5");
setText("conjecture_comprehensibility_weight_text", "0.5");
setText("conjecture_applicability_weight_text", "0.5");
setText("conjecture_plausibility_weight_text", "0.5");

clickList("learn_positives_list", "person:p0", true);
clickList("learn_positives_list", "person:p1", true);
clickList("learn_positives_list", "person:p2", true);
clickList("learn_positives_list", "person:p3", true);
clickList("learn_positives_list", "person:p4", true);
clickList("learn_positives_list", "person:p5", true);
clickList("learn_positives_list", "person:p6", true);
clickList("learn_positives_list", "person:p7", true);
clickList("learn_positives_list", "person:p8", true);
clickList("learn_positives_list", "person:p9", true);
clickList("learn_positives_list", "person:p10", true);
clickList("learn_positives_list", "person:p11", true);
clickList("learn_positives_list", "person:p12", true);
clickList("learn_positives_list", "person:p13", true);
clickList("learn_positives_list", "person:p14", true);
clickList("learn_positives_list", "person:p15", true);
clickList("learn_positives_list", "person:p16", true);
clickList("learn_positives_list", "person:p17", true);
clickList("learn_positives_list", "person:p18", true);
clickList("learn_positives_list", "person:p19", true);

clickList("learn_positives_list", "person:n0", true);
clickList("learn_positives_list", "person:n1", true);
clickList("learn_positives_list", "person:n2", true);
clickList("learn_positives_list", "person:n3", true);
clickList("learn_positives_list", "person:n4", true);
clickList("learn_positives_list", "person:n5", true);
clickList("learn_positives_list", "person:n6", true);
clickList("learn_positives_list", "person:n7", true);
clickList("learn_positives_list", "person:n8", true);
clickList("learn_positives_list", "person:n9", true);
clickList("learn_positives_list", "person:n10", true);
clickList("learn_positives_list", "person:n11", true);
clickList("learn_positives_list", "person:n12", true);
clickList("learn_positives_list", "person:n13", true);
clickList("learn_positives_list", "person:n14", true);
clickList("learn_positives_list", "person:n15", true);
clickList("learn_positives_list", "person:n16", true);
clickList("learn_positives_list", "person:n17", true);
clickList("learn_positives_list", "person:n18", true);
clickList("learn_positives_list", "person:n19", true);
clickButton("start_button");

